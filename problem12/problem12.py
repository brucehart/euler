# Author: Bruce Hart <bruce.hart@gmail.com>
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

def triangle_numbers():
    counter, current_sum = 0, 0
    while True:
        counter += 1
        current_sum += counter
        yield current_sum

def count_divisors(n):
    count = 1  # Include the number itself
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            count += 1
            if i != n // i:
                count += 1
    return count

def euler12():
    D = 500

    for t in triangle_numbers():
        if count_divisors(t) > D:
            print(t)
            break

if __name__ == '__main__':
    euler12()
